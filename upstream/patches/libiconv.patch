diff -Naur libiconv-1.17/srclib/fcntl.c libiconv-1.17/srclib/fcntl.c
--- srclib/fcntl.c	2022-01-04 09:33:29.000000000 +0100
+++ srclib/fcntl.c	2024-12-08 15:16:03.403194378 +0100
@@ -443,6 +443,16 @@
   return result;
 }
 
+int dupfd(int oldfd, int flags, int m) {
+  int newfd; 
+  newfd = fcntl(oldfd, F_DUPFD_CLOEXEC, flags); 
+  if (newfd == -1) { 
+    return -1;
+    
+  }
+  return newfd; 
+}
+
 static int
 rpl_fcntl_DUPFD (int fd, int target)
 {
diff -Naur libiconv-1.17/srclib/getdtablesize.c nlibiconv-1.17/srclib/getdtablesize.c
--- srclib/getdtablesize.c	2022-01-04 09:33:29.000000000 +0100
+++ srclib/getdtablesize.c	2024-12-08 09:13:56.695734809 +0100
@@ -109,6 +109,13 @@
 int
 getdtablesize (void)
 {
+    long open_max = sysconf(_SC_OPEN_MAX);
+    if (open_max == -1) {
+        return -1;
+    }
+    return open_max;
+  
+  /*
   struct rlimit lim;
 
   if (getrlimit (RLIMIT_NOFILE, &lim) == 0
@@ -118,7 +125,7 @@
       && lim.rlim_cur != RLIM_SAVED_MAX)
     return lim.rlim_cur;
 
-  return INT_MAX;
+  return INT_MAX;*/
 }
 
 #endif
diff -Naur libiconv-1.17/srclib/getprogname.c libiconv-1.17/srclib/getprogname.c
--- srclib/getprogname.c	2022-01-04 09:33:29.000000000 +0100
+++ srclib/getprogname.c	2024-12-08 15:19:17.007287851 +0100
@@ -59,6 +59,18 @@
 
 #include "basename-lgpl.h"
 
+
+#include <stdio.h>
+
+// not defined
+char const *
+getprogname (void)
+{
+return "";
+}
+
+#define HAVE_GETPROGNAME 
+
 #ifndef HAVE_GETPROGNAME             /* not Mac OS X, FreeBSD, NetBSD, OpenBSD >= 5.4, Cygwin */
 char const *
 getprogname (void)
diff -Naur libiconv-1.17/srclib/signal.in.h libiconv-1.17/srclib/signal.in.h
--- srclib/signal.in.h	2022-01-04 09:33:30.000000000 +0100
+++ srclib/signal.in.h	2024-12-08 13:02:58.013733127 +0100
@@ -15,6 +15,8 @@
    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.  */
 
+#include <stddef.h>
+
 #if __GNUC__ >= 3
 @PRAGMA_SYSTEM_HEADER@
 #endif
@@ -230,9 +232,9 @@
 #   undef sigismember
 #  endif
 # else
-_GL_FUNCDECL_SYS (sigismember, int, (const sigset_t *set, int sig)
-                                    _GL_ARG_NONNULL ((1)));
+/// _GL_FUNCDECL_SYS (sigismember, int, (const sigset_t *set, int sig) _GL_ARG_NONNULL ((1)));
 # endif
+
 _GL_CXXALIAS_SYS (sigismember, int, (const sigset_t *set, int sig));
 _GL_CXXALIASWARN (sigismember);
 
@@ -243,7 +245,7 @@
 #   undef sigemptyset
 #  endif
 # else
-_GL_FUNCDECL_SYS (sigemptyset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));
+/// _GL_FUNCDECL_SYS (sigemptyset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));
 # endif
 _GL_CXXALIAS_SYS (sigemptyset, int, (sigset_t *set));
 _GL_CXXALIASWARN (sigemptyset);
@@ -255,8 +257,7 @@
 #   undef sigaddset
 #  endif
 # else
-_GL_FUNCDECL_SYS (sigaddset, int, (sigset_t *set, int sig)
-                                  _GL_ARG_NONNULL ((1)));
+/// _GL_FUNCDECL_SYS (sigaddset, int, (sigset_t *set, int sig) _GL_ARG_NONNULL ((1)));
 # endif
 _GL_CXXALIAS_SYS (sigaddset, int, (sigset_t *set, int sig));
 _GL_CXXALIASWARN (sigaddset);
@@ -268,8 +269,7 @@
 #   undef sigdelset
 #  endif
 # else
-_GL_FUNCDECL_SYS (sigdelset, int, (sigset_t *set, int sig)
-                                  _GL_ARG_NONNULL ((1)));
+/// _GL_FUNCDECL_SYS (sigdelset, int, (sigset_t *set, int sig) _GL_ARG_NONNULL ((1)));
 # endif
 _GL_CXXALIAS_SYS (sigdelset, int, (sigset_t *set, int sig));
 _GL_CXXALIASWARN (sigdelset);
@@ -281,7 +281,7 @@
 #   undef sigfillset
 #  endif
 # else
-_GL_FUNCDECL_SYS (sigfillset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));
+/// _GL_FUNCDECL_SYS (sigfillset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));
 # endif
 _GL_CXXALIAS_SYS (sigfillset, int, (sigset_t *set));
 _GL_CXXALIASWARN (sigfillset);
diff -Naur libiconv-1.17/srclib/sigprocmask.c libiconv-1.17/srclib/sigprocmask.c
--- srclib/sigprocmask.c	2022-01-04 09:33:30.000000000 +0100
+++ srclib/sigprocmask.c	2024-12-08 13:49:23.728076685 +0100
@@ -109,7 +109,7 @@
 # undef signal
 # define signal ext_signal
 #endif
-
+/*
 int
 sigismember (const sigset_t *set, int sig)
 {
@@ -180,7 +180,7 @@
   *set = ((2U << (NSIG - 1)) - 1) & ~ SIGABRT_COMPAT_MASK;
   return 0;
 }
-
+*/
 /* Set of currently blocked signals.  */
 static volatile sigset_t blocked_set /* = 0 */;
 
